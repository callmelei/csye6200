package edu.neu.csye6200.ui;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Line2D;
import java.util.Observable;
import java.util.Observer;

import javax.swing.JPanel;

import edu.neu.csye6200.bg.BGGeneration;
import edu.neu.csye6200.bg.Stem;

public class MyCanvas extends JPanel implements Observer {

	private BGGeneration gen = null;
	
	public MyCanvas() {
	}

	@Override
	public void paint(Graphics g) {
		drawCanvas(g);
	}

	/**
	 * Draw the panel contents manually
	 * @param g
	 */
	public void drawCanvas(Graphics g) {
		Graphics2D g2d = (Graphics2D) g; // Cast to the better G2D interface
		
		Dimension size = getSize();
		double plotScale = (size.height * 0.95) / 460.0; // The BG tree generated by Rule1~Rule3 are around 460 in height
		g2d.setColor(new Color(255, 246, 220)); // Set background color
		g2d.fillRect(0, 0, size.width, size.height);

		if (gen != null) {
			Stem r = gen.root;
			Stem root1 = new Stem(size.width / 2, (int) (size.height * 0.98), // Create a root stem for scaled display
					r.getLength() * plotScale, r.getDirection(), 0, null);
			root1.setWidth(r.getWidth());
			BGGeneration gen1 = BGGeneration.createAndGrow(root1, gen.maxAge, gen.rule);
			drawTree(g2d, gen1);
		}
	}
	

	/**
	 * Draw BG tree
	 * @param g2d
	 * @param gen
	 */
	public void drawTree(Graphics2D g2d, BGGeneration gen) {
		for (int i = 0; i <= gen.maxAge; i++) {
			for (Stem s : gen.bgg[i]) {
				s.calcEnd();
				g2d.setColor(s.getColor());
				g2d.setStroke(new BasicStroke(s.getWidth()));
				g2d.draw(new Line2D.Float(s.getXStart(), s.getYStart(), s.getXEnd(), s.getYEnd()));
			}
		}
	}


	@Override
	public void update(Observable o, Object tree) {
		//System.out.println("ES received an update from: " + o);
		//System.out.println("Passed a gen: " + tree);
		gen = (BGGeneration) tree;

		this.repaint(); // Redraw the panel
	}

	public void setGen(BGGeneration gen) {
		this.gen = gen;
	}

}
